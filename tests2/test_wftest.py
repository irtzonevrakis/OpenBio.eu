# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

from selenium.webdriver.firefox.firefox_binary import FirefoxBinary


class TestWftest():
  def setup_method(self, method):
    binary = FirefoxBinary(r'C:\Program Files\Mozilla Firefox\firefox.exe')

    self.driver = webdriver.Firefox(executable_path= r'E:\openbioc\OpenBioC\tests\geckodriver.exe', firefox_binary=binary)
    self.driver.maximize_window() #For maximizing window
    self.driver.implicitly_wait(5) #gives an implicit wait for 5 seconds
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_wftest(self):
    # Test name: wftest
    # Step # | name | target | value | comment
    
    ####	SIGN IN		####
	# 1 | open | http://localhost:8200/platform/ |  | 
    self.driver.get("http://localhost:8200/platform/")
    # 2 | setWindowSize | 1351x1038 |  | 
    self.driver.set_window_size(1351, 1038)
    # 3 | click | id=signInBtn |  | 
    self.driver.find_element(By.ID, "signInBtn").click()
    # 4 | click | css=.ng-pristine > .col > .input-field:nth-child(1) > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-pristine > .col > .input-field:nth-child(1) > label").click()
    # 5 | type | id=signInUsername | gala | 
    self.driver.find_element(By.ID, "signInUsername").send_keys("gala")
    # 6 | click | css=.ng-dirty > .row > .input-field:nth-child(2) > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-dirty > .row > .input-field:nth-child(2) > label").click()
    # 7 | mouseOver | name=action |  | 
    element = self.driver.find_element(By.NAME, "action")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 8 | type | id=signInPassword | galagala | 
    self.driver.find_element(By.ID, "signInPassword").send_keys("galagala")
    # 9 | click | name=action |  | 
    self.driver.find_element(By.NAME, "action").click()
    # 10 | mouseOut | name=action |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
	
	
    time.sleep(2)
    
    ####	ADD GENERAL INFORMATION FOR WORKFLOW	#### 
	# 11 | click | css=#workflowsPlusBtn > .material-icons |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#workflowsPlusBtn > .material-icons").click()
    # 12 | click | css=.m12 > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".m12 > label").click()
    # 13 | type | id=generalWorkflowName | PCA | 
    self.driver.find_element(By.ID, "generalWorkflowName").send_keys("PCA")
    # 14 | click | css=.ng-invalid > .row > .input-field:nth-child(3) > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-invalid > .row > .input-field:nth-child(3) > label").click()
    # 15 | type | id=workflowsGeneralDescription | this is a test | 
    self.driver.find_element(By.ID, "workflowsGeneralDescription").send_keys("this is a test")
    time.sleep(2)
	

    ####	SEARCH FOR TOOL TO ADD IN THE WORKFLOW	#### 
    # 16 | click | id=leftPanelSearch |  | 
    self.driver.find_element_by_xpath("/html/body/div[1]/div[3]/div[1]/div[2]/div/form/div/div/label").click()    
	##self.driver.find_element(By.ID, "leftPanelSearch").click()
    # 17 | type | id=leftPanelSearch | plink | 
    self.driver.find_element(By.ID, "leftPanelSearch").send_keys("plink")
    time.sleep(2)
    # 18 | click | css=#toolsData .left:nth-child(3) |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#toolsData .left:nth-child(3)").click()
    time.sleep(2)	
	
    ####	DRAG-N-DROP TOOL TO THE WORKFLOW	#### 
    source_element = self.driver.find_element_by_partial_link_text('plink')
    dest_element = self.driver.find_element_by_xpath("/html/body/div[1]/div[3]/div[3]/div[2]/div[2]/div[2]/div/div/canvas[3]")
    actions = ActionChains(self.driver)
    actions.move_to_element(source_element).click_and_hold().perform()
    time.sleep(2)
    actions = ActionChains(self.driver)
    actions.move_to_element(dest_element).perform()
    actions = ActionChains(self.driver)
    actions.move_to_element(dest_element).release().perform()
    
    ####	ADD INOUT/OUTPUT TO THE WORKFLOW	#### 
    # 22 | click | css=.splitter-container |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".splitter-container").click()
    # 23 | click | css=#workflowRightPanelInputsOutputs .arrow |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#workflowRightPanelInputsOutputs .arrow").click()
    # 24 | click | css=.row:nth-child(1) td:nth-child(1) > .ng-pristine |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) td:nth-child(1) > .ng-pristine").click()    
	# 25 | type | css=td > .ng-not-empty | PEDMAP | 
    self.driver.find_element(By.XPATH, "/html/body/div[1]/div[3]/div[3]/div[2]/div[2]/ul[2]/li[2]/div[2]/div/div/table/tbody/tr/td[1]/input").send_keys("PEDMAP")	
    ###self.driver.find_element(By.CSS_SELECTOR, "td > .ng-not-empty").send_keys("PEDMAP")
    # 26 | click | css=.row:nth-child(1) .centered .ng-pristine |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".row:nth-child(1) .centered .ng-pristine").click()
    # 27 | type | css=td:nth-child(2) > .ng-not-empty | sdsd | 
    self.driver.find_element(By.XPATH, "/html/body/div[1]/div[3]/div[3]/div[2]/div[2]/ul[2]/li[2]/div[2]/div/div/table/tbody/tr/td[2]/input").send_keys("sdsd")
    ##self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(2) > .ng-not-empty").send_keys("sdsd")
    # 28 | click | css=.switch-label-off |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".switch-label-off").click()
    # 29 | click | css=.btn-small > .material-icons |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn-small > .material-icons").click()
    # 30 | click | css=.ng-scope:nth-child(2) > td:nth-child(1) > .ng-pristine |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(2) > td:nth-child(1) > .ng-pristine").click()
    # 31 | type | css=.ng-scope:nth-child(2) .ng-not-empty | PCA | 
    self.driver.find_element(By.XPATH, "/html/body/div[1]/div[3]/div[3]/div[2]/div[2]/ul[2]/li[2]/div[2]/div/div/table/tbody/tr[2]/td[1]/input").send_keys("PCA")	
    ###self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(2) .ng-not-empty").send_keys("PCA") 
    # 32 | click | css=.ng-scope:nth-child(2) .ng-pristine |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(2) .ng-pristine").click()
    # 33 | type | css=.ng-scope:nth-child(2) .ng-untouched | dsds | 
    self.driver.find_element(By.XPATH, "/html/body/div[1]/div[3]/div[3]/div[2]/div[2]/ul[2]/li[2]/div[2]/div/div/table/tbody/tr[2]/td[2]/input").send_keys("dsds")
    ##self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(2) .ng-untouched").send_keys("dsds") 
    # 34 | click | css=#switchCustom1 > .switch-label-on |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#switchCustom1 > .switch-label-on").click()
    # 35 | click | css=.green:nth-child(1) > .material-icons |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".green:nth-child(1) > .material-icons").click()
    
	
    ####	ADD STEP TO THE WORKFLOW	#### 
	# 36 | click | css=#workflowRightPanelStep .arrow |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#workflowRightPanelStep .arrow").click()
    # 37 | click | css=.s10 > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".s10 > label").click()
    # 38 | type | id=editWorkflowName | pca_step | 
    self.driver.find_element(By.ID, "editWorkflowName").send_keys("pca_step")
    # 39 | click | css=.input-field > label > span |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".input-field > label > span").click()
    # 40 | mouseDownAt | css=.rightPanel | 653,689 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".rightPanel")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 41 | mouseMoveAt | css=.rightPanel | 653,689 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".rightPanel")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 42 | mouseUpAt | css=.rightPanel | 653,689 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".rightPanel")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 43 | click | css=.waves-effect > .ng-binding |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".waves-effect > .ng-binding").click()
    # 44 | mouseDownAt | css=.rightPanel | 658,82 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".rightPanel")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 45 | mouseMoveAt | css=.rightPanel | 658,82 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".rightPanel")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 46 | mouseUpAt | css=.rightPanel | 658,82 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".rightPanel")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    
	####	SAVE WORKFLOW	#### 
    # 47 | click | linkText=save |  | 
    self.driver.find_element(By.LINK_TEXT, "save").click()
  
