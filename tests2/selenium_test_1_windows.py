# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys


from selenium.webdriver.firefox.firefox_binary import FirefoxBinary


#driver = webdriver.Firefox(executable_path= r'/usr/local/bin/geckodriver')
#driver.maximize_window() #For maximizing window
#driver.implicitly_wait(20) #gives an implicit wait for 20 seconds

class TestTestlogin():

  @classmethod
  def setup_class(cls):
    print ('SETUP CLASS')
    binary = FirefoxBinary(r'C:\Program Files\Mozilla Firefox\firefox.exe')

    cls.driver = webdriver.Firefox(executable_path= r'E:\openbioc\OpenBioC\tests\geckodriver.exe', firefox_binary=binary)
    cls.driver.maximize_window() #For maximizing window
    cls.driver.implicitly_wait(5) #gives an implicit wait for 5 seconds
    cls.vars = {}

  @classmethod
  def teardown_class(cls):
    print ('TEARDOWN CLASS')
    cls.driver.quit()


  def setup_method(self, method):
    print ('SELENIUM SETUP METHOD')
    #self.driver = webdriver.Firefox()
#    self.driver = webdriver.Firefox(executable_path= r'/usr/local/bin/geckodriver')
#    self.driver.maximize_window() #For maximizing window
#    self.driver.implicitly_wait(5) #gives an implicit wait for 20 seconds
#    self.vars = {}
  
  def teardown_method(self, method):
    print ('SELENIUM TEARDOWN METHOD')
    #self.driver.quit()
  
  def test_testlogin(self):
    print ('TESTING LOGIN')
    self.driver.get("http://localhost:8200/platform/")
    self.driver.set_window_size(1287, 696)
    self.driver.find_element(By.ID, "signInBtn").click()
    element = self.driver.find_element(By.ID, "signInBtn")
    actions = ActionChains(self.driver) # Changed
    #driver.implicitly_wait(20) 
    time.sleep(1)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver) # Changed
    #driver.implicitly_wait(20)
    # time.sleep(5) 
    #actions.move_to_element(element, 0, 0).perform()
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".ng-pristine > .col > .input-field:nth-child(1) > label").click()
    self.driver.find_element(By.ID, "signInUsername").send_keys("kantale")
    self.driver.find_element(By.CSS_SELECTOR, ".ng-dirty > .row > .input-field:nth-child(2) > label").click()
    time.sleep(1)
    self.driver.find_element(By.ID, "signInPassword").send_keys("222222")
    self.driver.find_element(By.NAME, "action").click()
    time.sleep(2)
    t = self.driver.find_element(By.CSS_SELECTOR, "a.valign-wrapper > span:nth-child(2)").text
   
    print ('t:', t)
    assert t == 'kantale'

    # a.valign-wrapper > span:nth-child(2)
  
  def test_abc(self):
    print ('Example of a successfull test ')
    assert 1==1

  def test_xyz(self):
    print ('Example of a failed test')
    assert 1==2


